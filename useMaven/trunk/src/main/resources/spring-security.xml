<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
            http://www.springframework.org/schema/security   
            http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <bean id="myFilter" class="com.wansan.template.core.MyFilterSecurityInterceptor" >
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="accessDecisionManager" ref="myAccessDecisionManager"/>
        <property name="securityMetadataSource" ref="myInvocationSecurityMetadataSourceService"/>
    </bean>

    <!-- 配置一个认证管理器 -->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="authenticationProvider"/>
    </security:authentication-manager>

    <bean id="authenticationProvider"
                class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="myUserDetailService"/>
        <!--显示用户错误信息-->
        <property name="hideUserNotFoundExceptions" value="false" />
        <property name="passwordEncoder" ref="passwordEncoder"/>
        <property name="saltSource" ref="saltSource"/>
    </bean>
    <bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
        <property name = "userPropertyToUse" value = "username" />
    </bean >
    <!--use-expressions="true" 的意思是开启表达式 access-denied-page的意思是，当验证权限失败后会跳转到的页面  -->
    <security:http auto-config="true" use-expressions="true">
        <security:form-login login-page="/login.html"
                             login-processing-url="/login_check"
                             default-target-url="/"
                             authentication-failure-url="/login.html?error=true"
                             authentication-success-handler-ref="loginSuccessHandler"/>
        <security:logout invalidate-session="true" logout-success-url="/login.html  " logout-url="/auth/logout"/>
        <security:custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR"/>

        <!--session超时处理-->
        <security:session-management invalid-session-url="/login.html"  session-authentication-error-url="/timeout.html">
        <!-- 配置一个帐号同时只能有一个会话，这样当有第二个用户登录的时候，第一个用户就会失效 -->
        <!--    <security:concurrency-control max-sessions="1" error-if-maximum-exceeded="true"/> -->
        </security:session-management>
        <security:access-denied-handler ref="accessDeniedHandler"/>
    </security:http>


    <bean id="loginSuccessHandler" class="com.wansan.template.core.LoginSuccessHandler"/>
    <bean id="passwordEncoder"
          class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
    <bean id="accessDeniedHandler"
                class="com.wansan.template.core.MyAccessDeniedHandlerImpl">
        <property name="accessDeniedUrl" value="/accessdeny.html" />
    </bean>
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>myMessages</value>
            </list>
        </property>
    </bean>
</beans>